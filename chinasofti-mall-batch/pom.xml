<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.chinasofti.mall.batch</groupId>
	<artifactId>chinasofti-mall-batch</artifactId>
	<version>0.0.1</version>
	<name>chinasofti-mall-batch</name>
	<packaging>jar</packaging>

	<!-- 项目依赖 -->
	<dependencies>
		<dependency>
			<groupId>com.chinasofti.mall</groupId>
			<artifactId>chinasofti-mall-common</artifactId>
			<version>0.0.1</version>
		</dependency>

		<!-- springbatch依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-batch</artifactId>
			<version>1.5.3.RELEASE</version>
        </dependency>

		<!-- 导入dbcp的jar包，用来在applicationContext.xml中配置数据库 -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.6</version>
		</dependency>
		<!-- END -->

		<!-- 格式化对象，方便输出日志 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.1.41</version>
		</dependency>

		<!-- Mybatis依赖 -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.3.1</version>
		</dependency>
		<!-- Mybatis依赖END -->
	</dependencies>
	<!-- 项目依赖 END -->
	<!-- 配置打包插件 -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>1.5.4.RELEASE</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<!-- 是否指定项目classpath下的依赖 -->
							<addClasspath>true</addClasspath>
							<!-- 指定依赖的时候声明前缀 -->
							<classpathPrefix>../lib/</classpathPrefix>
							<useUniqueVersions>false</useUniqueVersions>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<!--把当前项目所有的依赖打包到target目录下的lib文件夹下 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<!--已存在的Release版本不重复copy -->
							<overWriteReleases>false</overWriteReleases>
							<!--已存在的SnapShot版本不重复copy -->
							<overWriteSnapshots>false</overWriteSnapshots>
							<!--不存在或者有更新版本的依赖才copy -->
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<!--只执行一次 -->
							<goal>single</goal>
						</goals>
						<configuration>
							<finalName>${project.name}</finalName>
							<descriptor>src/main/resources/assembly/assembly.xml</descriptor>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>